[tool.poetry]
name = "commitizen-version-bump"
version = "0.1.0"
description = "Commitizen customized for Meltano projects (https://commitizen-tools.github.io/commitizen/customization)"
authors = ["Meltano <hello@meltano.com>"]
packages = [{ include = "cz_version_bump" }]

[tool.poetry.dependencies]
commitizen = ">=3"
python = ">=3.9"
PyGithub = ">=1.59.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
pytest-httpserver = { version = "^1.0.8", python = "<4" }

[tool.poetry.plugins."commitizen.plugin"]
cz_version_bump = "cz_version_bump:MeltanoCommitizen"

[tool.pytest.ini_options]
addopts = ["-vvv", "-W error"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle (errors)
    "W",    # pycodestyle (warnings)
    "C90",  # mccabe
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "S",    # flake8-bandit
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "ERA",  # flake8-eradicate
    "PGH",  # pygrep-hooks
    "PLC",  # Pylint (Convention)
    "PLE",  # Pylint (Error)
    "PLR",  # Pylint (Refactor)
    "PLW",  # Pylint (Warning)
    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF", # Perflint
    "FURB", # refurb
    "RUF",  # Ruff-specific rules
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
